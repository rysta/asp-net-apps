//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RircApps.Areas.PSP.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceQuery {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceQuery() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RircApps.Areas.PSP.Resources.ResourceQuery", typeof(ResourceQuery).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select case when stol.stol_id = 10 then &apos;Новозыбков&apos; else case when stol.stol_id = 9 then &apos;Карачев&apos; else to_char(stoluch, &apos;99&apos;) end end as pru, doktchel.famil||&apos; &apos;|| coalesce(doktchel.imya, &apos;&apos;)||&apos; &apos;|| coalesce(doktchel.otch, &apos;&apos;) as fio,
        ///		to_char(dtrd, &apos;DD.MM.YYYY&apos;)||&apos; г.&apos;,
        ///		street.socr||&apos;. &apos;|| street.name||&apos;, д.&apos;
        ///		||adhouse.adhousenom||
        ///		case when adhouse.adhousecorp is null then &apos;&apos; else &apos;, корп.&apos;||adhousecorp end||
        ///	&apos;, кв.&apos;|| ls.lsflat as adr, to_char(prop.dtst, &apos;DD.MM.YYYY&apos;)||&apos; г.&apos;, prb, case whe [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string arrived_military_report {
            get {
                return ResourceManager.GetString("arrived_military_report", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select case when stol.stol_id = 10 then &apos;Новозыбков&apos; else case when stol.stol_id = 9 then &apos;Карачев&apos; else to_char(stoluch, &apos;99&apos;) end end as pru, doktchel.famil||&apos; &apos;|| coalesce(doktchel.imya, &apos;&apos;)||&apos; &apos;|| coalesce(doktchel.otch, &apos;&apos;) as fio,
        ///		to_char(dtrd, &apos;DD.MM.YYYY&apos;)||&apos; г.&apos;,
        ///		street.socr||&apos;. &apos;|| street.name||&apos;, д.&apos;
        ///		||adhouse.adhousenom||
        ///		case when adhouse.adhousecorp is null then &apos;&apos; else &apos;, корп.&apos;||adhousecorp end||
        ///	&apos;, кв.&apos;|| ls.lsflat as adr, to_char(prop.dtfn, &apos;DD.MM.YYYY&apos;)||&apos; г.&apos;, coalesce(ubt, [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string drop_out_military_report {
            get {
                return ResourceManager.GetString("drop_out_military_report", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT DISTINCT prop.chel_id, du.duname, prop.dtst, prop.dtfn, street.socr||&apos;. &apos;|| street.name||&apos;, д.&apos;||adhouse.adhousenom||case when adhouse.adhousecorp is null then &apos;&apos; else &apos;, корп.&apos;||adhousecorp end||
        /// &apos;, кв.&apos;|| ls.lsflat
        ///  FROM psp.prop, psp.kart, psp.ls, psp.du, psp.gos, psp.street, psp.adhouse
        /// WHERE prop.kart_id = kart.kart_id 
        ///   AND kart.ls_id   = ls.ls_id
        ///   AND ls.du_id     = du.du_id
        ///   AND prop.dtfn &gt;= :parameterDateFNFrom
        ///   AND prop.dtfn &lt;= :parameterDateFNBefore
        ///   AND du.du_id in (% [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string drop_out_strength_change {
            get {
                return ResourceManager.GetString("drop_out_strength_change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT du.du_id, du.dusname
        /// FROM psp.du
        /// WHERE du.du_id &lt;&gt; 0
        ///ORDER BY du.dusname.
        /// </summary>
        internal static string du_query {
            get {
                return ResourceManager.GetString("du_query", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UPDATE psp.ls SET lsflat= :p_ls_flat 
        ///WHERE ls_id 
        ///	     IN (SELECT ls.ls_id FROM psp.kart, psp.ls WHERE kart.kart_id = :p_kart_id AND kart.ls_id = ls.ls_id);.
        /// </summary>
        internal static string flat_change {
            get {
                return ResourceManager.GetString("flat_change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT kart.kart_id, street.socr ||&apos;. &apos;|| street.name ||&apos; дом &apos;||adhouse.adhousenom, ls.lsflat
        ///FROM psp.kart, psp.ls, psp.adhouse, psp.street
        ///WHERE kart.kart_id = :p_kart_id 
        ///AND kart.ls_id     = ls.ls_id
        ///AND ls.adhouse_id  = adhouse.adhouse_id
        ///AND adhouse.addres_id = street.code.
        /// </summary>
        internal static string flat_info {
            get {
                return ResourceManager.GetString("flat_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT psp.del_kart(:p_kart_id).
        /// </summary>
        internal static string kart_del {
            get {
                return ResourceManager.GetString("kart_del", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT kart.kart_id, chel.chel_id, chel.dtrd, doktchel.famil ||&apos; &apos;||doktchel.imya||&apos; &apos;||doktchel.otch 
        ///FROM psp.kart, psp.ls, psp.prop, psp.chel, psp.doktchel
        ///WHERE kart.kart_id   = :p_kart_id
        ///AND kart.ls_id       = ls.ls_id
        ///AND prop.kart_id     = kart.kart_id
        ///AND prop.chel_id     = chel.chel_id
        ///AND doktchel.chel_id = prop.chel_id
        ///
        ///UNION
        ///
        ///SELECT kart.kart_id, kart.ls_id, null, null
        ///FROM psp.kart
        ///WHERE kart_id = :p_kart_id.
        /// </summary>
        internal static string kart_info {
            get {
                return ResourceManager.GetString("kart_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT psp.del_chel(:p_chel).
        /// </summary>
        internal static string person_del {
            get {
                return ResourceManager.GetString("person_del", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT chel_id, famil ||&apos; &apos;|| imya ||&apos; &apos;|| otch 
        ///FROM psp.doktchel
        ///WHERE chel_id = :p_chel.
        /// </summary>
        internal static string person_info {
            get {
                return ResourceManager.GetString("person_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT DISTINCT prop.chel_id, du.duname, prop.dtst, prop.dtfn, street.socr||&apos;. &apos;|| street.name||&apos;, д.&apos;||adhouse.adhousenom||case when adhouse.adhousecorp is null then &apos;&apos; else &apos;, корп.&apos;||adhousecorp end||
        /// &apos;, кв.&apos;|| ls.lsflat
        ///  FROM psp.prop, psp.kart, psp.ls, psp.du, psp.gos, psp.street, psp.adhouse
        /// WHERE prop.kart_id = kart.kart_id 
        ///   AND kart.ls_id   = ls.ls_id
        ///   AND ls.du_id     = du.du_id  
        ///    AND prop.dtst &gt;= :parameterDateSTFrom
        ///     AND prop.dtst &lt;= :parameterDateSTBefore 
        ///    AND du.du_i [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string registration_strength_change {
            get {
                return ResourceManager.GetString("registration_strength_change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select case when stol.stol_id = 10 then &apos;Новозыбков&apos; else case when stol.stol_id = 9 then &apos;Карачев&apos; else to_char(stoluch, &apos;99&apos;) end end as pru, doktchel.famil||&apos; &apos;|| coalesce(doktchel.imya, &apos;&apos;)||&apos; &apos;|| coalesce(doktchel.otch, &apos;&apos;) as fio,
        ///		to_char(dtrd, &apos;DD.MM.YYYY&apos;)||&apos; г.&apos;,
        ///		street.socr||&apos;. &apos;|| street.name||&apos;, д.&apos;
        ///		||adhouse.adhousenom||
        ///		case when adhouse.adhousecorp is null then &apos;&apos; else &apos;, корп.&apos;||adhousecorp end||
        ///	&apos;, кв.&apos;|| ls.lsflat as adr, to_char(prop.dtfn, &apos;DD.MM.YYYY&apos;)||&apos; г.&apos;, ubt, case whe [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string write_out_report {
            get {
                return ResourceManager.GetString("write_out_report", resourceCulture);
            }
        }
    }
}
